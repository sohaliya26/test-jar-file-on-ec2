# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
           mvn clean install
           mkdir artifacts && cp target/*.jar artifacts
           cd artifacts && ls
    - name: Save artifact
      uses: actions/upload-artifact@v2
      with:
        name: github-action-artifact
        path: artifacts
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-github-action-demo:latest
  deploy:
    needs: build
    runs-on: [aws-ec2]
    steps:
      - name: Pull Image from docker hub
        run: sudo docker pull sohaliya/spring-boot-github-action-demo:latest
      - name: Delete old container
        run: sudo docker rm -f spring-boot-app-container
      - name: Run Docker Image
        run: sudo docker run -d -p 8080:8080 --name spring-boot-app-container sohaliya/spring-boot-github-action-demo


        
          
      

